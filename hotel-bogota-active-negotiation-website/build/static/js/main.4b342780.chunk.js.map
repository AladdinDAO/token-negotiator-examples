{"version":3,"sources":["LogoCard/index.js","BookingModal/index.js","RoomCard/index.js","EthereumLogo/index.js","DatePicker/index.js","BookingDate/index.js","App.js","reportWebVitals.js","index.js"],"names":["LogoCard","style","color","marginLeft","width","height","margin","fontSize","textAlign","theme","createTheme","palette","primary","main","secondary","BookingModal","image","roomType","discount","applyDiscount","price","book","tokens","React","useState","open","setOpen","useReducer","state","newState","reference","cardNo","cardSort","cardCsv","formInput","setFormInput","handleInput","evt","name","target","newValue","value","handleSubmit","preventDefault","viewPrice","ThemeProvider","Button","className","onClick","variant","Dialog","onClose","overflow","position","top","src","DialogTitle","disableTypography","DialogContent","onSubmit","TextField","id","label","placeholder","helperText","fullWidth","onChange","InputLabelProps","shrink","DialogActions","useStyles","makeStyles","root","maxWidth","media","RoomCard","room","classes","type","frequency","Card","CardMedia","title","CardContent","Typography","gutterBottom","component","CardActions","EthereumLogo","DatePicker","date","utils","DateFnsUtils","Grid","container","justifyContent","disableToolbar","format","disabled","e","KeyboardButtonProps","BookingDate","today","Date","tomorrow","setDate","getDate","from","to","display","mockRoomData","App","negotiator","Negotiator","freeShuttle","roomTypesData","setRoomTypesData","undefined","tokenInstance","setDiscount","status","useTicket","ethKey","useDiscountProof","setUseDiscountProof","ticket","a","proof","useEthKey","authenticate","unEndPoint","unsignedToken","authenticationData","console","log","formData","params","bookingData","fetch","URLSearchParams","then","data","alert","useEffect","map","index","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b342780.chunk.js","sourcesContent":["import React from 'react';\nimport './logoCard.css';\n\n// LOGO CARD COMPONENT\n// shows the hotel title\n\nfunction LogoCard() {\n  return (\n    <div style={{ color: 'white', marginLeft: '42px', width: '200px', height: '100px' }}>\n      <h1 style={{ margin: '17px 0 0 0' }} >Hotel Bogota</h1>\n      <h2 style={{ fontSize: '14px', margin: '5px', textAlign: \"center\", color: \"#ff9900\" }}>Condelaria</h2>\n    </div>\n  );\n}\n\nexport default LogoCard;\n\n","\nimport React, { useReducer } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport './BookingModal.css';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0071c3',\n    },\n    secondary: {\n      main: '#11cb5f',\n    },\n  },\n});\n\n\n// BOOKING MODAL COMPONENT\n// Booking form\n\nexport default function BookingModal({ image, roomType, applyDiscount, discount, price, tokens, book }) {\n\n  // Modal State (open boolean)\n  const [open, setOpen] = React.useState(false);\n\n  // Form state.\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state, ...newState }), { \n    reference: \"Beeple\",\n    cardNo: \"00000000000\", \n    cardSort: \"00-00-00\",\n    cardCsv: \"000\"\n  });\n\n  // Handle form input.\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  // Simple validation check.\n  const formIsDisabled = () => {\n    return false;\n  }\n\n  // handle form submission.\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    book({ formInput, roomType });\n  };\n\n  // Open Modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // apply discount\n  const discountPerc = discount.value ? discount.value : 0;\n  const discountOfferValue = (discountPerc / 100) * price;\n  const viewPrice = price - discountOfferValue;\n\n  // example of application of tickets that can be used to apply a discount\n  const discountTicketClasses = [\"0\"];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Button color=\"primary\" className=\"bookButton\" onClick={handleClickOpen} variant=\"contained\">\n        Book\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\">\n        <div className='modalContainer'>\n          <div style={{ width: '100%', height: '138px', overflow: 'hidden' }}>\n            <img \n              style={{ width: '100%', position: 'relative', top: '-71px' }}\n              src={image}\n            />\n          </div>\n          <DialogTitle\n            className=\"title\"\n            disableTypography={true}\n          >\n            {roomType} \n          </DialogTitle>\n          <DialogTitle\n            className=\"subTitle\"\n            disableTypography={true}\n          >\n            {viewPrice} COP per night. { discount.value ? `(${discount.value}% discount)` : \"\"}\n        </DialogTitle>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                id=\"booking-name\"\n                label=\"Reference name\"\n                placeholder=\"Beeple\"\n                value=\"Beeple\"\n                helperText=\"(a check-in reference name for your booking)\"\n                fullWidth\n                name=\"reference\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-no\"\n                label=\"Card Number\"\n                fullWidth\n                placeholder=\"00000000000\"\n                value=\"00000000000\"\n                name=\"cardNo\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-sort\"\n                label=\"Card Sort Number\"\n                fullWidth\n                placeholder=\"00-00-00\"\n                value=\"00-00-00\"\n                name=\"cardSort\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-csv\"\n                label=\"CSV\"\n                fullWidth\n                value=\"000\"\n                placeholder=\"000\"\n                name=\"cardCsv\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </form>\n          </DialogContent>\n          <div className=\"booking\">\n          <DialogActions>\n          <Button\n              color=\"primary\"\n              className=\"paynow\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n              color=\"primary\"\n              disabled={formIsDisabled()}\n            >\n              Pay Now\n          </Button>\n          </DialogActions>\n        </div>\n        </div>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BookingModal from './../BookingModal';\nimport Typography from '@material-ui/core/Typography';\nimport './RoomCard.css';\n\n// ROOM CARD COMPONENT\n// Shows hotel room item; image, price and option to book.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"20px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function RoomCard({ room, applyDiscount, discount, tokens, book }) {\n  const classes = useStyles();\n  const { type, price, image, frequency } = room;\n  return (\n    <Card className=\"roomCard\">\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title=\"token\"\n        />\n        <CardContent>\n          <Typography\n            style={{ fontSize: '21px' }}\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {type}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            COP {price} / {frequency}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions>\n        <BookingModal\n          book={book}\n          image={image}\n          applyDiscount={applyDiscount}\n          tokens={tokens}\n          roomType={type}\n          discount={discount}\n          price={price} />\n      </CardActions>\n    </Card>\n  );\n}\n","import './EthereumLogo.css';\n\nconst EthereumLogo = () => {\n  return (\n    <div className=\"ethScale\">\n      <div id=\"space\">\n        <div className=\"elogo\">\n          <div className=\"trif u1\"></div>\n          <div className=\"trif u2\"></div>\n          <div className=\"trif u3\"></div>\n          <div className=\"trif u4\"></div>\n          <div className=\"ct\"></div>\n          <div className=\"trif l1\"></div>\n          <div className=\"trif l4\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EthereumLogo;","\n\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n// DATE PICKER COMPONENT\n// wraps the Date picker material ui component\n\nexport default function DatePicker({ label, handleInput, date }) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justifyContent=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          className=\"date-picker-inline\"\n          label={label}\n          disabled={true}\n          value={date}\n          onChange={e => handleInput(e, label)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport DatePicker from './../DatePicker';\n\n// BOOKING DATE COMPONENT\n// Mock Date Picker for demo purposes only\n\nconst BookingDate = () => {\n\n  var today = new Date();\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Form state.\n  const [formInput, setFormInput] = useState({\n    from: today,\n    to: tomorrow\n  });\n\n  // Handle date change input\n  const handleInput = (newValue, label) => {\n    setFormInput({ [label]: newValue });\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '80%' }}>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'from'}\n            label={'check in'}\n            handleInput={handleInput}\n            date={\"08/01/2021\"}\n          />\n        </div>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'to'}\n            label={'check out'}\n            handleInput={handleInput}\n            date={\"08/15/2021\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingDate;","import React, { useState, useEffect } from 'react';\nimport LogoCard from './LogoCard';\nimport RoomCard from './RoomCard';\nimport Typography from '@material-ui/core/Typography';\nimport EthereumLogo from './EthereumLogo';\nimport BookingDate from './BookingDate';\nimport { Negotiator } from 'token-negotiator';\n// import TokenNotificationCard from './TokenNotificationCard';\nimport './App.css';\n  \n// mock data e.g. server side hotel room price database\nconst mockRoomData = [{\"type\":\"Deluxe Room\",\"price\": 200000,\"frequency\":\"night\",\"image\":\"./hotel_3.jpg\"},{\"type\":\"King Suite\",\"price\": 320000,\"frequency\":\"night\",\"image\":\"./hotel_2.png\"},{\"type\":\"Superior Deluxe Suite\",\"price\": 250030,\"frequency\":\"night\",\"image\":\"./hotel_1.jpg\"}]\n\n// mock discount of 10% applied to any ticket selected. In a real world scenario, this maybe different per ticket type and retrieved from a backend service.\nconst mockRoomDiscountData = 10;\n\nfunction App() {\n\n  // add filters when specific tokens are required\n  const filter = {};\n  \n  // apply the tokenName to negotiate tokens from e.g. devcon-ticket.\n  const tokenName = \"devcon-ticket\";\n\n  // set required negotiator options\n  const options = {};\n\n  // create new instance of the Negotiator with params\n  let negotiator = new Negotiator(filter, tokenName, options);\n\n  // devcont tickets (react state of tokens)\n  let [tokens, setTokens] = useState([]);\n\n  // react state of token specical offer\n  let [freeShuttle, setFreeShuttle] = useState(false);\n\n  // react state of hotel room data\n  let [roomTypesData, setRoomTypesData] = useState([]);\n\n  // selected token instance to apply discount, with the discount value on hotel booking.\n  let [discount, setDiscount] = useState({ value: undefined, tokenInstance: null });\n\n  // token proof\n  let [useDiscountProof, setUseDiscountProof] = useState({ status: false, useTicket: undefined, ethKey: undefined });\n\n  // async example of initial hotel data loaded from source\n  const getRoomTypesData = () => {\n    return mockRoomData;\n  }\n\n  // example to return a discount\n  const getApplicableDiscount = () => {\n    return mockRoomDiscountData;\n  }\n\n  // When a ticket is present and user applies it, the discount will be shown\n  const applyDiscount = async (ticket) => {\n\n    // toggle room discount offer on/off\n    if (!ticket || ticket === null) {\n      \n      // clear discount\n      setDiscount({ value: undefined, tokenInstance: undefined });\n\n      // clear discount proof data\n      setUseDiscountProof({ status: false, proof: undefined, useEthKey: undefined });\n\n    } else {\n\n      // endpoint to get an unpredictable number (mock example)\n      const unpredicatbleNumberEndPoint = 'https://crypto-verify.herokuapp.com/use-devcon-ticket';\n      \n      // authenticate discount ticket is valid\n      const authenticationData = await negotiator.authenticate({\n        unEndPoint: unpredicatbleNumberEndPoint,\n        unsignedToken: ticket\n      });\n\n      console.log(\"authenticationData\", authenticationData);\n\n      // when the ticket is valid and validation data is present\n      if(\n        authenticationData.status === true &&\n        authenticationData.useEthKey &&\n        authenticationData.proof\n      ) {\n\n        // store token proof details in react state for later.\n        // authenticationData: { status, useTicket, ethKey }\n        setUseDiscountProof(authenticationData);\n        \n        // share discount price via react state with the user inside react view.\n        setDiscount({ value: getApplicableDiscount(), tokenInstance: ticket });\n\n      } else {\n\n        // handle scenario when the authentication process for discount is not valid.\n\n      }\n    }\n  }\n\n  // This is the example point at which the hotel would send payment with booking & discount details\n  const book = async (formData) => {\n\n    const checkoutEndPoint = \"https://raw.githubusercontent.com/TokenScript/token-negotiator/main/examples/hotel-bogota/mockbackend-responses/pay.json\";\n\n    const params = {\n      discount: useDiscountProof,\n      bookingData: { formData }\n    }\n\n    // data for backend to validate discount\n    console.log(\"useDiscountProof\", params);\n\n    fetch(checkoutEndPoint + new URLSearchParams(params)).then(data => {\n      alert('Transaction Complete, we look forward to your stay with us!');\n    });\n  \n  }\n\n  // negotiation happens when this method is triggered\n  // before this time, the token-negotiator is not used.\n  const getTokens = () => {\n    negotiator.negotiate().then(results => {\n      if(results.success){\n        setTokens(results.tokens);\n        setFreeShuttle(true);\n      }\n    });\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign room data to react local state\n    setRoomTypesData(getRoomTypesData());\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <LogoCard />\n        {/* <TokenNotificationCard \n          getTokens={e=>getTokens()} \n          negotiator={negotiator} \n          tokensNumber={tokens.length} \n          tokenPermissionRequired={true} // example of how user permissions could be applied to flow on the client side\n        /> */}\n      </div>\n      <BookingDate />\n      <div className=\"roomCardsContainer\">\n        {roomTypesData.map((room, index) => {\n          return <RoomCard\n            key={index}\n            room={room}\n            applyDiscount={applyDiscount}\n            discount={discount}\n            tokens={tokens}\n            book={book}\n          />\n        })}\n      </div>\n      {\n        freeShuttle &&\n        <div>\n          <EthereumLogo />\n          <Typography\n            style={{ padding: '20px' }}\n            className=\"applyDiscountCopyContainer\"\n            gutterBottom\n            variant=\"body2\"\n            component=\"p\">\n            Free shuttle service available to you as a Devcon Ticket holder! Enjoy the event.\n          </Typography>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}