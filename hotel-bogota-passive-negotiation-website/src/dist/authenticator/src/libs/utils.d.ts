export declare function stringToHex(str: string): string;
export declare function hexStringToArray(str?: string): number[];
export declare function hexStringToUint8(str?: string): Uint8Array;
export declare function hexStringToBase64Url(str?: string): string;
export declare function mod(a: bigint, b?: bigint): bigint;
export declare function invert(number: bigint, modulo?: bigint): bigint;
export declare function egcd(a: bigint, b: bigint): bigint[];
export declare function uint8ToBn(uint8: Uint8Array): bigint;
export declare function bufToBn(buf: Uint8Array): bigint;
export declare function bnToUint8(bn: bigint): Uint8Array;
export declare function bnToBuf(bn: bigint, length?: number): Uint8Array;
export declare function uint8merge(list: Uint8Array[]): Uint8Array;
export declare function uint8toString(uint8: Uint8Array): string;
export declare function uint8arrayToBase64(bytes: Uint8Array): string;
export declare function base64toBase64Url(base64: string): string;
export declare function pemOrBase64Orbase64urlToString(base64str: string): string;
export declare function base64ToUint8array(base64str: string): Uint8Array;
export declare function stringToArray(str: string): number[];
export declare function BnPowMod(base: bigint, n: bigint, mod: bigint): bigint;
export declare function uint8tohex(uint8: Uint8Array): string;
export declare function uint8toBuffer(uint8: Uint8Array): any;
export declare function getInt64Bytes(x: number): Uint8Array;
export declare function hashStringTo32bytesUint8(str: string): Uint8Array;
export declare function hashUint8To32bytesUint8(data: Uint8Array): Uint8Array;
export declare function ethAddressToUint8(str: string): Uint8Array;
export declare function formatGeneralizedDateTime(date: number): string;
export declare function isDomainValid(domain: string): boolean;
