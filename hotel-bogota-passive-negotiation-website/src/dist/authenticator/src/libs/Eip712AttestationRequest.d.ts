import { Validateable } from "./Validateable";
import { Verifiable } from "./Verifiable";
import { JsonEncodable } from "../intefaces/JsonEncodable";
import { AttestationRequest } from "./AttestationRequest";
import { KeyPair } from "./KeyPair";
import { FullProofOfExponent } from "./FullProofOfExponent";
import { Eip712Token } from "./Eip712Token";
export declare class Eip712AttestationRequest extends Eip712Token implements JsonEncodable, Verifiable, Validateable {
    private jsonEncoding;
    private attestationRequest;
    private acceptableTimeLimit;
    private userKey;
    private Eip712UserDataTypes;
    private Eip712UserDataPrimaryName;
    private Eip712UserDataDescription;
    constructor(userKey?: KeyPair, acceptableTimeLimit?: number);
    addData(attestorDomain: string, acceptableTimeLimit: number | undefined, identifier: string, request: AttestationRequest): Promise<false | undefined>;
    fillJsonData(json: string): void;
    constructorCheck(): void;
    makeToken(identifier: string): Promise<string>;
    setAcceptableTimeLimit(limit: number): void;
    getJsonEncoding(): string;
    verify(): boolean;
    verifyDomainData(): boolean;
    checkValidity(): boolean;
    getIdentifier(): string;
    getType(): number;
    getPok(): FullProofOfExponent;
    getUserPublicKey(): KeyPair;
}
