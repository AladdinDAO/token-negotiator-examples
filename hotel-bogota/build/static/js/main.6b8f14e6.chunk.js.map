{"version":3,"sources":["LogoCard/index.js","Card/index.js","BookingModal/index.js","RoomCard/index.js","TokenNotificationCard/index.js","EthereumLogo/index.js","DatePicker/index.js","BookingDate/index.js","App.js","reportWebVitals.js","index.js"],"names":["LogoCard","title","Card","className","CardContent","Typography","gutterBottom","variant","component","TokenCard","tokenInstance","applyDiscount","discount","isSelectedToken","ticketId","onClick","e","ticketClass","toString","color","devconId","src","BookingModal","roomType","price","tokens","book","React","useState","open","setOpen","useReducer","state","newState","reference","cardNo","cardSort","cardCsv","formInput","setFormInput","handleInput","evt","name","target","newValue","value","handleSubmit","preventDefault","handleClose","viewPrice","discountTicketClasses","Button","size","Dialog","onClose","DialogTitle","disableTypography","DialogContent","onSubmit","style","border","padding","fontSize","display","justifyContent","textAlign","borderLeft","borderRight","borderBottom","length","filter","_token","indexOf","map","token","index","TextField","id","label","placeholder","helperText","fullWidth","margin","onChange","InputLabelProps","shrink","alignItems","marginTop","marginRight","width","height","DialogActions","disabled","useStyles","makeStyles","root","maxWidth","media","RoomCard","room","classes","type","image","frequency","CardMedia","CardActions","TokenView","tokensNumber","TokenNotificationCard","getTokens","negotiator","undefined","userPermissionStatus","setUserPermissionStatus","setPermissionEvent","bool","setUserPermission","getUserPermission","useEffect","Zoom","in","transitionDelay","EthereumLogo","DatePicker","date","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","KeyboardButtonProps","BookingDate","today","Date","tomorrow","setDate","getDate","from","to","mockRoomData","App","Negotiator","userPermissionRequired","setTokens","freeShuttle","setFreeShuttle","roomTypesData","setRoomTypesData","setDiscount","status","useTicket","ethKey","useDiscountProof","setUseDiscountProof","ticket","a","proof","useEthKey","authenticate","unEndPoint","unsignedToken","authenticationData","console","log","formData","params","bookingData","fetch","URLSearchParams","then","data","alert","negotiate","results","success","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b8f14e6.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './logoCard.css';\n\n// LOGO CARD COMPONENT\n// shows the hotel title\n\nfunction LogoCard({ title }) {\n  return (\n    <Card className=\"logoCard\">\n      <CardContent className=\"cardContent\">\n        <Typography\n          gutterBottom\n          variant=\"h1\"\n          component=\"h1\"\n        >\n          {title}\n        </Typography>\n        <div className=\"logo-wrapper\">\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default LogoCard;\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\n// Token Card COMPONENT\n// Displays a single tickets data\n\nfunction TokenCard({ tokenInstance, applyDiscount, discount }) {\n  const isSelectedToken = (discount.tokenInstance && discount.tokenInstance.ticketId === tokenInstance.ticketId);\n  return (\n    <div onClick={e => applyDiscount(isSelectedToken ? null : tokenInstance)} className={isSelectedToken ? 'tokenCard selected' : 'tokenCard'}>\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" gutterBottom variant=\"h5\" component=\"h2\">\n          {tokenInstance.ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tokenInstance.ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {tokenInstance.devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default TokenCard;\n","\nimport React, { useReducer } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Card from './../Card';\nimport './BookingModal.css';\n\n// BOOKING MODAL COMPONENT\n// Booking form\n\nexport default function BookingModal({ roomType, applyDiscount, discount, price, tokens, book }) {\n\n  // Modal State (open boolean)\n  const [open, setOpen] = React.useState(false);\n\n  // Form state.\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state, ...newState }), { \n    reference: \"Beeple\",\n    cardNo: \"00000000000\", \n    cardSort: \"00-00-00\",\n    cardCsv: \"000\"\n  });\n\n  // Handle form input.\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  // Simple validation check.\n  const formIsDisabled = () => {\n    return false;\n  }\n\n  // handle form submission.\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    book({ formInput, roomType });\n  };\n\n  // Open Modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // apply discount\n  const discountPerc = discount.value ? discount.value : 0;\n  const discountOfferValue = (discountPerc / 100) * price;\n  const viewPrice = price - discountOfferValue;\n\n  // example of application of tickets that can be used to apply a discount\n  const discountTicketClasses = [\"0\"];\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Book\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\">\n        <div className='modalContainer'>\n          <DialogTitle\n            className=\"title\"\n            disableTypography={true}\n          >\n            {roomType} \n          </DialogTitle>\n          <DialogTitle\n            className=\"subTitle\"\n            disableTypography={true}\n          >\n            {viewPrice} COP per night. { discount.value ? `(${discount.value}% discount)` : \"\"}\n        </DialogTitle>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n             <div style={{ border: \"1px solid darkcyan\", padding: \"7px 12px\", fontSize: \"14px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ textAlign:\"left\" }}>check in 01/08/2021</div>\n                <div style={{ textAlign:\"left\" }}>check out 15/08/2021</div>\n             </div>\n             <div style={{ borderLeft: \"1px solid darkcyan\", borderRight: \"1px solid darkcyan\", borderBottom: \"1px solid darkcyan\", padding: \"7px 12px\", fontSize: \"14px\", textAlign:\"left\" }}>\n                <div>Total { viewPrice * 14 } COP</div>\n             </div>\n              <div>\n                {tokens.length > 0 && <p className=\"smallCopy\">Select a ticket to apply discount:</p>\n                }\n              </div>\n              <div className=\"ticketWrapper\">\n              {tokens &&\n                tokens\n                  .filter(_token => discountTicketClasses.toString().indexOf(_token.ticketClass) > -1)\n                  .map((token, index) => (\n                    <div key={index}>\n                      <Card\n                        applyDiscount={applyDiscount}\n                        tokenInstance={token}\n                        discount={discount}\n                      />\n                    </div>\n                  ))\n              }\n              </div>\n              <TextField\n                id=\"booking-name\"\n                label=\"Reference name\"\n                placeholder=\"Beeple\"\n                value=\"Beeple\"\n                helperText=\"(a check-in reference name for your booking)\"\n                fullWidth\n                name=\"reference\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-no\"\n                label=\"Card Number\"\n                fullWidth\n                placeholder=\"00000000000\"\n                value=\"00000000000\"\n                name=\"cardNo\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-sort\"\n                label=\"Card Sort Number\"\n                fullWidth\n                placeholder=\"00-00-00\"\n                value=\"00-00-00\"\n                name=\"cardSort\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-csv\"\n                label=\"CSV\"\n                fullWidth\n                value=\"000\"\n                placeholder=\"000\"\n                name=\"cardCsv\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <div style={{ display: \"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", marginTop: \"12px\" }}>\n                <div style={{ color: \"grey\", fontSize: \"12px\", marginRight: \"5px\" }}>cards accepted</div>\n                <img style={{ width: \"100px\", height: \"24px\" }} src=\"./cards-accepted-demo.png\"></img>\n              </div>\n            </form>\n          </DialogContent>\n          <div className=\"booking\">\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n            >\n              Cancel\n          </Button>\n          <Button\n              onClick={handleSubmit}\n              color=\"primary\"\n              disabled={formIsDisabled()}\n            >\n              Pay Now\n          </Button>\n          </DialogActions>\n        </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BookingModal from './../BookingModal';\nimport Typography from '@material-ui/core/Typography';\nimport './RoomCard.css';\n\n// ROOM CARD COMPONENT\n// Shows hotel room item; image, price and option to book.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"20px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function RoomCard({ room, applyDiscount, discount, tokens, book }) {\n  const classes = useStyles();\n  const { type, price, image, frequency } = room;\n  return (\n    <Card className=\"roomCard\">\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title=\"token\"\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {type}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            From {price} COP / {frequency}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions>\n        <BookingModal\n          book={book}\n          applyDiscount={applyDiscount}\n          tokens={tokens}\n          roomType={type}\n          discount={discount}\n          price={price} />\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport './TokenNotificationCard.css';\n\n// TOKEN NOTIFICATION CARD COMPONENT\n// - shows ticket number\n// - manages the user selection if they will accept Devcon to connect with this page\n\n// When Access is granted this view will show\nfunction TokenView({tokensNumber}) {\n    return (\n      <Card className=\"tokenNotificationCard\">\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h1\"\n            component=\"h1\"\n          >\n            {tokensNumber} Devcon Tickets\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body1\"\n            component=\"p\"\n          >\n            booking discounts available\n          </Typography>\n        </CardContent>\n        <div className=\"cardBottomLip\"></div>\n      </Card>\n  );\n};\n\nfunction TokenNotificationCard({ getTokens, negotiator, tokensNumber }) {\n  \n  let [userPermissionStatus, setUserPermissionStatus] = useState(undefined);\n\n  const setPermissionEvent = (bool) => {\n    // set permission inside negotiator state\n    negotiator.setUserPermission(bool);\n    // assign user permission status on change\n    setUserPermissionStatus(negotiator.getUserPermission());\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign user permission status to negotiator state\n    setUserPermissionStatus(negotiator.getUserPermission());\n    // if the status is true trigger parent component \n    // event to get the tokens from the negotiator\n    if(userPermissionStatus === true) getTokens();\n    // When false hide the notification card\n    // if(userPermissionStatus === false);\n  }, [userPermissionStatus]);\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: true ? '500ms' : '0ms' }}>\n      <div>\n        { userPermissionStatus && <TokenView tokensNumber={tokensNumber}></TokenView> }\n        { userPermissionStatus === undefined && <Card className=\"tokenNotificationCard\">\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"body1\"\n              component=\"p\"\n            >\n              Do you give permission for Devcon to connect with this website?\n            </Typography>\n            <button onClick={e => setPermissionEvent(true)}>YES</button> <button onClick={e => setPermissionEvent(false)}>NO</button>\n          </CardContent>\n          <div className=\"cardBottomLip\"></div>\n        </Card>\n      }\n      </div>\n    </Zoom>\n  );\n}\n\nexport default TokenNotificationCard;\n\n","import './EthereumLogo.css';\n\nconst EthereumLogo = () => {\n  return (\n    <div className=\"ethScale\">\n      <div id=\"space\">\n        <div className=\"elogo\">\n          <div className=\"trif u1\"></div>\n          <div className=\"trif u2\"></div>\n          <div className=\"trif u3\"></div>\n          <div className=\"trif u4\"></div>\n          <div className=\"ct\"></div>\n          <div className=\"trif l1\"></div>\n          <div className=\"trif l4\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EthereumLogo;","\n\nimport 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n// DATE PICKER COMPONENT\n// wraps the Date picker material ui component\n\nexport default function DatePicker({ label, handleInput, date }) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          className=\"date-picker-inline\"\n          label={label}\n          disabled={true}\n          value={date}\n          onChange={e => handleInput(e, label)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport DatePicker from './../DatePicker';\n\n// BOOKING DATE COMPONENT\n// Mock Date Picker for demo purposes only\n\nconst BookingDate = () => {\n\n  var today = new Date();\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Form state.\n  const [formInput, setFormInput] = useState({\n    from: today,\n    to: tomorrow\n  });\n\n  // Handle date change input\n  const handleInput = (newValue, label) => {\n    setFormInput({ [label]: newValue });\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '80%' }}>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'from'}\n            label={'check in'}\n            handleInput={handleInput}\n            date={\"08/01/2021\"}\n          />\n        </div>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'to'}\n            label={'check out'}\n            handleInput={handleInput}\n            date={\"08/15/2021\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingDate;","import React, { useState, useEffect } from 'react';\nimport LogoCard from './LogoCard';\nimport RoomCard from './RoomCard';\nimport TokenNotificationCard from './TokenNotificationCard';\nimport Typography from '@material-ui/core/Typography';\nimport EthereumLogo from './EthereumLogo';\nimport BookingDate from './BookingDate';\nimport { Negotiator } from '@alphawallet/token-negotiator';\nimport './App.css';\n  \n// mock data e.g. server side hotel room price database\nconst mockRoomData = [{\"type\":\"Deluxe Room\",\"price\": 200000,\"frequency\":\"per night\",\"image\":\"./hotel_3.jpg\"},{\"type\":\"King Suite\",\"price\": 320000,\"frequency\":\"per night\",\"image\":\"./hotel_2.png\"},{\"type\":\"Superior Deluxe Suite\",\"price\": 250030,\"frequency\":\"per night\",\"image\":\"./hotel_1.jpg\"}]\n\n// mock discount of 10% applied to any ticket selected. In a real world scenario, this maybe different per ticket type and retrieved from a backend service.\nconst mockRoomDiscountData = 10;\n\nfunction App() {\n\n  // add filters when specific tokens are required\n  const filter = {};\n  \n  // apply the tokenName to negotiate tokens from e.g. devcon-ticket.\n  const tokenName = \"devcon-ticket\";\n\n  // set required negotiator options\n  const options = { \n    userPermissionRequired: true\n  };\n\n  // create new instance of the Negotiator with params\n  let negotiator = new Negotiator(filter, tokenName, options);\n\n  // devcont tickets (react state of tokens)\n  let [tokens, setTokens] = useState([]);\n\n  // react state of token specical offer\n  let [freeShuttle, setFreeShuttle] = useState(false);\n\n  // react state of hotel room data\n  let [roomTypesData, setRoomTypesData] = useState([]);\n\n  // selected token instance to apply discount, with the discount value on hotel booking.\n  let [discount, setDiscount] = useState({ value: undefined, tokenInstance: null });\n\n  // token proof\n  let [useDiscountProof, setUseDiscountProof] = useState({ status: false, useTicket: undefined, ethKey: undefined });\n\n  // async example of initial hotel data loaded from source\n  const getRoomTypesData = () => {\n    return mockRoomData;\n  }\n\n  // example to return a discount\n  const getApplicableDiscount = () => {\n    return mockRoomDiscountData;\n  }\n\n  // When a ticket is present and user applies it, the discount will be shown\n  const applyDiscount = async (ticket) => {\n\n    // toggle room discount offer on/off\n    if (!ticket || ticket === null) {\n      \n      // clear discount\n      setDiscount({ value: undefined, tokenInstance: undefined });\n\n      // clear discount proof data\n      setUseDiscountProof({ status: false, proof: undefined, useEthKey: undefined });\n\n    } else {\n\n      // endpoint to get an unpredictable number (mock example)\n      const unpredicatbleNumberEndPoint = 'https://crypto-verify.herokuapp.com/use-devcon-ticket';\n      \n      // authenticate discount ticket is valid\n      const authenticationData = await negotiator.authenticate({\n        unEndPoint: unpredicatbleNumberEndPoint,\n        unsignedToken: ticket\n      });\n\n      console.log(\"authenticationData\", authenticationData);\n\n      // when the ticket is valid and validation data is present\n      if(\n        authenticationData.status === true &&\n        authenticationData.useEthKey &&\n        authenticationData.proof\n      ) {\n\n        // store token proof details in react state for later.\n        // authenticationData: { status, useTicket, ethKey }\n        setUseDiscountProof(authenticationData);\n        \n        // share discount price via react state with the user inside react view.\n        setDiscount({ value: getApplicableDiscount(), tokenInstance: ticket });\n\n      } else {\n\n        // handle scenario when the authentication process for discount is not valid.\n\n      }\n    }\n  }\n\n  // This is the example point at which the hotel would send payment with booking & discount details\n  const book = async (formData) => {\n\n    const checkoutEndPoint = \"https://raw.githubusercontent.com/TokenScript/token-negotiator/main/examples/hotel-bogota/mockbackend-responses/pay.json\";\n\n    const params = {\n      discount: useDiscountProof,\n      bookingData: { formData }\n    }\n\n    // data for backend to validate discount\n    console.log(\"useDiscountProof\", params);\n\n    fetch(checkoutEndPoint + new URLSearchParams(params)).then(data => {\n      alert('Transaction Complete, we look forward to your stay with us!');\n    });\n  \n  }\n\n  // negotiation happens when this method is triggered\n  // before this time, the token-negotiator is not used.\n  const getTokens = () => {\n    negotiator.negotiate().then(results => {\n      if(results.success){\n        setTokens(results.tokens);\n        setFreeShuttle(true);\n      }\n    });\n  }\n\n  // react effect\n  useEffect(() => {\n    // assign room data to react local state\n    setRoomTypesData(getRoomTypesData());\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <LogoCard title={\"Hotel Bogota\"} />\n        <TokenNotificationCard getTokens={e=>getTokens()} negotiator={negotiator} tokensNumber={tokens.length} />\n      </div>\n      <BookingDate />\n      <div className=\"roomCardsContainer\">\n        {roomTypesData.map((room, index) => {\n          return <RoomCard\n            key={index}\n            room={room}\n            applyDiscount={applyDiscount}\n            discount={discount}\n            tokens={tokens}\n            book={book}\n          />\n        })}\n      </div>\n      {\n        freeShuttle &&\n        <div>\n          <EthereumLogo />\n          <Typography\n            style={{ padding: '20px' }}\n            className=\"applyDiscountCopyContainer\"\n            gutterBottom\n            variant=\"body2\"\n            component=\"p\">\n            Free shuttle service available to you as a Devcon Ticket holder! Enjoy the event.\n          </Typography>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}